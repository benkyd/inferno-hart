let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/programming/inferno-hart
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 src/inferno.cpp
badd +29 src/graphics/renderpass.cpp
badd +17 src/graphics/renderpass.hpp
badd +3 src/graphics/swapchain.hpp
badd +13 src/graphics/pipeline.hpp
badd +54 src/inferno.hpp
badd +1 src/main.cpp
badd +693 ~/dprog/active/inferno-hart/src/graphics/vulkan_tutorial.cpp
badd +1 ~/dprog/active/inferno-hart/src/graphics/descriptor.cpp
badd +58 src/graphics/vkrenderer.cpp
badd +15 src/graphics/vkrenderer.hpp
badd +42 src/renderer/renderer.hpp
badd +1 src/graphics/swapchain.cpp
argglobal
%argdel
edit src/graphics/vkrenderer.cpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 22 + 33) / 66)
exe 'vert 1resize ' . ((&columns * 108 + 93) / 187)
exe '2resize ' . ((&lines * 40 + 33) / 66)
exe 'vert 2resize ' . ((&columns * 108 + 93) / 187)
exe '3resize ' . ((&lines * 31 + 33) / 66)
exe 'vert 3resize ' . ((&columns * 78 + 93) / 187)
exe '4resize ' . ((&lines * 31 + 33) / 66)
exe 'vert 4resize ' . ((&columns * 78 + 93) / 187)
argglobal
balt src/graphics/swapchain.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 59 - ((10 * winheight(0) + 11) / 22)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 59
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("src/graphics/swapchain.cpp", ":p")) | buffer src/graphics/swapchain.cpp | else | edit src/graphics/swapchain.cpp | endif
if &buftype ==# 'terminal'
  silent file src/graphics/swapchain.cpp
endif
balt src/graphics/vkrenderer.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 237 - ((27 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 237
normal! 05|
wincmd w
argglobal
if bufexists(fnamemodify("src/graphics/swapchain.hpp", ":p")) | buffer src/graphics/swapchain.hpp | else | edit src/graphics/swapchain.hpp | endif
if &buftype ==# 'terminal'
  silent file src/graphics/swapchain.hpp
endif
balt src/graphics/vkrenderer.hpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 3 - ((2 * winheight(0) + 15) / 31)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("src/graphics/vkrenderer.hpp", ":p")) | buffer src/graphics/vkrenderer.hpp | else | edit src/graphics/vkrenderer.hpp | endif
if &buftype ==# 'terminal'
  silent file src/graphics/vkrenderer.hpp
endif
balt src/graphics/pipeline.hpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 15 - ((14 * winheight(0) + 15) / 31)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 15
normal! 0
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 22 + 33) / 66)
exe 'vert 1resize ' . ((&columns * 108 + 93) / 187)
exe '2resize ' . ((&lines * 40 + 33) / 66)
exe 'vert 2resize ' . ((&columns * 108 + 93) / 187)
exe '3resize ' . ((&lines * 31 + 33) / 66)
exe 'vert 3resize ' . ((&columns * 78 + 93) / 187)
exe '4resize ' . ((&lines * 31 + 33) / 66)
exe 'vert 4resize ' . ((&columns * 78 + 93) / 187)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
