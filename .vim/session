let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/dprog/Active/inferno-hart
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 ~/dprog/Active/inferno-hart
badd +330 src/inferno.cpp
badd +92 hart/inferno-hart-cpu/src/main.cpp
badd +107 src/renderer/renderer.cpp
badd +23 src/renderer/ray_source.cpp
badd +88 libhart/inferno_hart.hpp
badd +27 hart/inferno-hart-opencl/src/main.cpp
argglobal
%argdel
$argadd ~/dprog/Active/inferno-hart
edit src/renderer/renderer.cpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt src/renderer/ray_source.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 107 - ((58 * winheight(0) + 51) / 103)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 107
normal! 033|
lcd ~/dprog/Active/inferno-hart
wincmd w
argglobal
if bufexists(fnamemodify("~/dprog/Active/inferno-hart/hart/inferno-hart-cpu/src/main.cpp", ":p")) | buffer ~/dprog/Active/inferno-hart/hart/inferno-hart-cpu/src/main.cpp | else | edit ~/dprog/Active/inferno-hart/hart/inferno-hart-cpu/src/main.cpp | endif
if &buftype ==# 'terminal'
  silent file ~/dprog/Active/inferno-hart/hart/inferno-hart-cpu/src/main.cpp
endif
balt ~/dprog/Active/inferno-hart/libhart/inferno_hart.hpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 92 - ((14 * winheight(0) + 30) / 61)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 92
normal! 012|
lcd ~/dprog/Active/inferno-hart
wincmd w
argglobal
if bufexists(fnamemodify("~/dprog/Active/inferno-hart/libhart/inferno_hart.hpp", ":p")) | buffer ~/dprog/Active/inferno-hart/libhart/inferno_hart.hpp | else | edit ~/dprog/Active/inferno-hart/libhart/inferno_hart.hpp | endif
if &buftype ==# 'terminal'
  silent file ~/dprog/Active/inferno-hart/libhart/inferno_hart.hpp
endif
balt ~/dprog/Active/inferno-hart/hart/inferno-hart-cpu/src/main.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 83 - ((12 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 83
normal! 056|
lcd ~/dprog/Active/inferno-hart
wincmd w
wincmd =
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
